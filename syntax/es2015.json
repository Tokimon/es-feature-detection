{
  "for...of": "for(var i of [1,2,3]) {}",

  "RegExp.prototype.sticky": "return typeof RegExp.prototype.sticky !== 'undefined'",
  "RegExp.prototype.unicode": "return typeof RegExp.prototype.unicode !== 'undefined'",

  "const": "const b=42",
  "let": "let a=42",
  "Destructuring": "var {a:A,b:B=3}={a:1};var [a,b]=[1,2];",
  "Spread Array": "var a=[...[1,2]];var [...b]=a;",
  "Spread Function call": "function t(a,b) {};t(...[1,2]);t.call(this,...[1,2])",
  "Rest parameters": "function t(a,...args) {};t(...[1,2,3]);t.call(this,...[1,2,3])",
  "Default parameters": "function t(a=1) {};t()",
  "Arrow function": "var f=()=>{}",
  "Generator function": "function* g(){}",
  "Binary literals": "0b00100001",
  "Octal literals": "0o222",
  "Template Strings": "function f(a, b) {return a[0]+(b+1)+a[1];}var s=`life=${40+2}`,t=f`a:${5}x`",
  "Shorthand property": "var a=2,o={a}",
  "Shorthand method": "var o={a(){}}",
  "Computed property": "var a='a',o={[a]:1,['p']:2,[a+'p']:3}",
  "Block level function declaration": "(function(){'use strict';function f(){return 1;}{function f(){return 2;}}if(f()===2)throw 'Failed';})()",
  "class": "class A {};class B extends A {}"
}
